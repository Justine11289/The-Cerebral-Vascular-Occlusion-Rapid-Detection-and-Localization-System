{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"mount_file_id":"1GyA_r1goMIH4HYiBNIGRVf2NQBaT75Xd","authorship_tag":"ABX9TyOag+x3zoA7y5jrTjEtwuWp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Rty0DUc6UALT"},"outputs":[],"source":["!nvidia-smi # 確認使用之顯卡"]},{"cell_type":"code","source":["from __future__ import print_function\n","import keras\n","import tensorflow as tf\n","from tensorflow.keras.utils import to_categorical\n","from keras.datasets import mnist\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Flatten\n","from keras.layers import Conv2D, MaxPooling2D\n","from keras import backend as K"],"metadata":{"id":"oJoDJiDl6EoN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 定義梯度下降批量(圖片數量)\n","batch_size = 128\n","# 定義分類數量(數字0-9)\n","num_classes = 10\n","# 定義訓練週期\n","epochs = 12\n","# 定義圖像寬、高(像素)\n","img_rows, img_cols = 28, 28"],"metadata":{"id":"80mfE896VdKD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 載入MNIST訓練資料\n","(x_train,y_train),(x_test,y_test) = mnist.load_data()"],"metadata":{"id":"spBumxQlX_Ir"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 輸入資料的順序可能不同->設定判斷資料放置的維度位置\n","\n","# channels_first:色彩通道(R/G/B)資料(深度)放在第2維度,第3、4維度放置寬與高\n","if K.image_data_format() == 'channels_first':\n","  x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)\n","  x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)\n","  input_shape = (1, img_rows, img_cols)\n","# channels_last:色彩通道(R/G/B)資料(深度)放在第4維度,第2、3維度放置寬與高\n","else:\n","  x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\n","  x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\n","  input_shape = (img_rows, img_cols, 1)"],"metadata":{"id":"GrDHmA3TYH-2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 轉換色彩 0-255 資料為 0-1\n","x_train = x_train.astype('float32') # astype():對資料型別進行轉換\n","x_test = x_test.astype('float32')\n","x_train /= 255\n","x_test /= 255\n","\n","# y值轉成one-hot encoding(one-hot encoding:為每個類別新增一個欄位，用0/1表示是否)\n","y_train = keras.utils.np_utils.to_categorical(y_train, num_classes)\n","y_test = keras.utils.np_utils.to_categorical(y_test, num_classes)"],"metadata":{"id":"qPA_xqF1cIhP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 建立簡單的線性執行的模型\n","model = Sequential()\n","# 建立卷積層，filter=32,即 output space 的深度, Kernal Size: 3x3, activation function 採用 relu\n","model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=input_shape))\n","# 建立卷積層，filter=64,即 output size, Kernal Size: 3x3, activation function 採用 relu\n","model.add(Conv2D(64, (3, 3), activation='relu'))\n","# 建立池化層，池化大小=2x2，取最大值\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","# Dropout層隨機斷開輸入神經元，用於防止過度擬合，斷開比例:0.25\n","model.add(Dropout(0.25))\n","# Flatten層把多維的輸入一維化，常用在從卷積層到全連接層的過渡\n","model.add(Flatten())\n","# 全連接層: 128個output\n","model.add(Dense(256, activation='relu'))\n","# Dropout層隨機斷開輸入神經元，用於防止過度擬合，斷開比例:0.5\n","model.add(Dropout(0.5))\n","# 使用 softmax activation function，將結果分類\n","model.add(Dense(num_classes, activation='softmax'))\n","# 查看模型結構\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SddRODSLcSbX","executionInfo":{"status":"ok","timestamp":1658511589234,"user_tz":-480,"elapsed":3267,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"b65dc4e6-7f3a-4839-9617-95d52bfe0727"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 26, 26, 32)        320       \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 24, 24, 64)        18496     \n","                                                                 \n"," max_pooling2d (MaxPooling2D  (None, 12, 12, 64)       0         \n"," )                                                               \n","                                                                 \n"," dropout (Dropout)           (None, 12, 12, 64)        0         \n","                                                                 \n"," flatten (Flatten)           (None, 9216)              0         \n","                                                                 \n"," dense (Dense)               (None, 256)               2359552   \n","                                                                 \n"," dropout_1 (Dropout)         (None, 256)               0         \n","                                                                 \n"," dense_1 (Dense)             (None, 10)                2570      \n","                                                                 \n","=================================================================\n","Total params: 2,380,938\n","Trainable params: 2,380,938\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 編譯: 選擇損失函數、優化方法及成效衡量方式\n","model.compile(loss=keras.losses.categorical_crossentropy, # categorical_crossentropy收斂緩慢\n","              optimizer=tf.keras.optimizers.Adam(),\n","              metrics=['accuracy'])\n","\n","# 進行訓練,訓練過程會存在train_history變數中\n","train_history = model.fit(x_train, y_train,\n","          batch_size=batch_size,\n","          epochs=epochs,\n","          verbose=1,\n","          validation_data=(x_test, y_test))\n","# 模型儲存\n","model.save('my_model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"puk_mKnmcZbe","executionInfo":{"status":"ok","timestamp":1658511674863,"user_tz":-480,"elapsed":82649,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"83d83988-e432-4093-f97a-07793b8b82db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/12\n","469/469 [==============================] - 16s 11ms/step - loss: 0.1895 - accuracy: 0.9420 - val_loss: 0.0415 - val_accuracy: 0.9864\n","Epoch 2/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0648 - accuracy: 0.9803 - val_loss: 0.0363 - val_accuracy: 0.9868\n","Epoch 3/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0462 - accuracy: 0.9856 - val_loss: 0.0342 - val_accuracy: 0.9889\n","Epoch 4/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0375 - accuracy: 0.9880 - val_loss: 0.0324 - val_accuracy: 0.9892\n","Epoch 5/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0322 - accuracy: 0.9896 - val_loss: 0.0299 - val_accuracy: 0.9897\n","Epoch 6/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0266 - accuracy: 0.9914 - val_loss: 0.0296 - val_accuracy: 0.9909\n","Epoch 7/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0233 - accuracy: 0.9923 - val_loss: 0.0344 - val_accuracy: 0.9896\n","Epoch 8/12\n","469/469 [==============================] - 6s 12ms/step - loss: 0.0212 - accuracy: 0.9933 - val_loss: 0.0245 - val_accuracy: 0.9919\n","Epoch 9/12\n","469/469 [==============================] - 5s 11ms/step - loss: 0.0207 - accuracy: 0.9933 - val_loss: 0.0258 - val_accuracy: 0.9921\n","Epoch 10/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0155 - accuracy: 0.9948 - val_loss: 0.0293 - val_accuracy: 0.9923\n","Epoch 11/12\n","469/469 [==============================] - 5s 10ms/step - loss: 0.0157 - accuracy: 0.9946 - val_loss: 0.0267 - val_accuracy: 0.9925\n","Epoch 12/12\n","469/469 [==============================] - 5s 11ms/step - loss: 0.0146 - accuracy: 0.9954 - val_loss: 0.0285 - val_accuracy: 0.9924\n"]}]},{"cell_type":"code","source":["# 顯示損失函數、訓練成果(分數)\n","score = model.evaluate(x_test, y_test, verbose=0)\n","print('Test loss:', score[0])\n","print('Test accuracy:', score[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GTMjxOdRclDU","executionInfo":{"status":"ok","timestamp":1658511681001,"user_tz":-480,"elapsed":1505,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"a8366600-acac-4ed0-d2e0-ac024883fb76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test loss: 0.028513576835393906\n","Test accuracy: 0.9923999905586243\n"]}]},{"cell_type":"code","source":["# Plot Loss and Accuracy\n","import matplotlib.pyplot as plt\n","plt.figure(figsize = (15,5))\n","plt.subplot(1,2,1)\n","plt.plot(train_history.history['accuracy'])\n","plt.plot(train_history.history['val_accuracy'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","\n","plt.subplot(1,2,2)\n","plt.plot(train_history.history['loss'])\n","plt.plot(train_history.history['val_loss'])\n","plt.title('model loss')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"k1VJ-jkndKmn","executionInfo":{"status":"ok","timestamp":1658511684183,"user_tz":-480,"elapsed":923,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"f5e3e0bc-1cff-48ea-97f3-d24e2177f7b0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["以下實際運用已訓練完成之模型進行"],"metadata":{"id":"7NSTciHbBdB-"}},{"cell_type":"code","source":["# 載入圖片\n","import os\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import cv2\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","img = Image.open('/content/drive/My Drive/Project/Training/0719-CNN/num3.png').convert('L')\n","img"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":62},"id":"JtUZFWAooOhS","executionInfo":{"status":"ok","timestamp":1658511718669,"user_tz":-480,"elapsed":13402,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"bf3a0dbb-057d-489b-c29e-1cea35782d21"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=L size=28x28 at 0x7F06E03DB450>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAAAAABXZoBIAAAAiklEQVR4nMWSwREDIQwDRSYFuISUIDpI/x9KIR0on+RizuK+8Qt7h7EkaMK+bhfsDHtrPbVKRYQU8+gzZEjSoIUPSdIMCz/3x3FsxUqaFCs9NmrXjXVn2lgggwA9JBBS0EHGWIb3rPQ1T9JLCN8YjdrFjYE/Nybbi+ATKyHAx/cEsCD3ZPsP9n/4BsGLnDTWaP62AAAAAElFTkSuQmCC\n"},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["import numpy as np\n","img_array = np.array(img)\n","img_array = 255 - img_array\n","img_array = img_array / 255.0\n","img_array = img_array.reshape((28,28,1))\n","img_array = np.expand_dims(img_array, 0)\n","img_array.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mY2QXJnQ1Jj8","executionInfo":{"status":"ok","timestamp":1658511721482,"user_tz":-480,"elapsed":6,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"1943cd79-8625-47af-c3c4-cc9283280fa3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 28, 28, 1)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# 開啟模型\n","testmodel = tf.keras.models.load_model('my_model.h5')\n","np.argmax(testmodel.predict(img_array))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e6N8EsZx9-1r","executionInfo":{"status":"ok","timestamp":1658511725026,"user_tz":-480,"elapsed":613,"user":{"displayName":"黃子庭","userId":"08688763290107689521"}},"outputId":"6aa8dc24-b071-40d5-8ee2-d1a1bc64b514"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":13}]}]}